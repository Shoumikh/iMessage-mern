{"ast":null,"code":"var _jsxFileName = \"/Users/shoumikh/Documents/React-projects/imessage-clone/src/Chat.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Chat.css\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport { IconButton } from \"@material-ui/core\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport { useSelector } from \"react-redux\";\nimport { selectChatId, selectChatName } from \"./features/chatSlice\";\n\nfunction Chat() {\n  const [input, setInput] = useState(); //takes what msg user enters\n\n  const [massages, setMessages] = useState([]); //local state array for messages\n\n  const chatName = useSelector(selectChatName); //seclects chat name from chat slice\n\n  const chatId = useSelector(selectChatId); //selects chat Id from chat slice\n  //only triggers when chatId changes\n  //for setting msg to database and listen\n  //for any changes in the messages state\n\n  useEffect(() => {\n    //if there is a chatID\n    //it will go to chats db which is previously created\n    //grab the chatId from chats db \n    //as we click on the chat room chatId changes and useEffect\n    //loads based on chatId changes\n    //it will create db based on chat id\n    //create message db and order it by timestamp desc\n    //then on any chages inside the message db \n    //it will store it message array\n    if (chatId) {\n      db.collection(\"chats\").doc(chatId).collection(\"messages\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n        setMessages(snapshot.docs.map(doc => ({\n          id: doc.id,\n          data: doc.data()\n        })));\n      });\n    }\n  }, [chatId]);\n\n  const sendMessage = e => {\n    e.preventDefault(); //prevents from reloading the page\n    //firebase works\n\n    setInput(\"\"); //set the input to nothing after sending message\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"To: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"chat__channelName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, chatName)), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Details\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: e => {\n      setInput(e.target.value);\n    },\n    placeholder: \"iMessage\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Send Message\")), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MicIcon, {\n    className: \"chat__mic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/shoumikh/Documents/React-projects/imessage-clone/src/Chat.js"],"names":["React","useEffect","useState","MicIcon","IconButton","Message","db","useSelector","selectChatId","selectChatName","Chat","input","setInput","massages","setMessages","chatName","chatId","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","data","sendMessage","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Chat.css\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport { IconButton } from \"@material-ui/core\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport { useSelector } from \"react-redux\";\nimport { selectChatId, selectChatName } from \"./features/chatSlice\";\n\nfunction Chat() {\n  const [input, setInput] = useState(); //takes what msg user enters\n  const [massages, setMessages] = useState([]); //local state array for messages\n  const chatName = useSelector(selectChatName); //seclects chat name from chat slice\n  const chatId = useSelector(selectChatId); //selects chat Id from chat slice\n\n  //only triggers when chatId changes\n  //for setting msg to database and listen\n  //for any changes in the messages state\n  useEffect(() => {\n    //if there is a chatID\n    //it will go to chats db which is previously created\n    //grab the chatId from chats db \n    //as we click on the chat room chatId changes and useEffect\n    //loads based on chatId changes\n    //it will create db based on chat id\n    //create message db and order it by timestamp desc\n    //then on any chages inside the message db \n    //it will store it message array\n    if (chatId) {\n      db.collection(\"chats\")\n        .doc(chatId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n          setMessages(\n            snapshot.docs.map((doc) => ({\n              id: doc.id,\n              data: doc.data(),\n            }))\n          );\n        });\n    }\n  }, [chatId]);\n\n  const sendMessage = (e) => {\n    e.preventDefault(); //prevents from reloading the page\n\n    //firebase works\n\n    setInput(\"\"); //set the input to nothing after sending message\n  };\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <h4>\n          To: <span className=\"chat__channelName\">{chatName}</span>\n        </h4>\n        <strong>Details</strong>\n      </div>\n\n      {/* chat body */}\n      <div className=\"chat__messages\">\n        <Message />\n        <Message />\n        <Message />\n      </div>\n\n      <div className=\"chat__input\">\n        <form>\n          <input\n            value={input}\n            onChange={(e) => {\n              setInput(e.target.value);\n            }}\n            placeholder=\"iMessage\"\n            type=\"text\"\n          />\n          <button onClick={sendMessage}>Send Message</button>\n        </form>\n        <IconButton>\n          <MicIcon className=\"chat__mic\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}