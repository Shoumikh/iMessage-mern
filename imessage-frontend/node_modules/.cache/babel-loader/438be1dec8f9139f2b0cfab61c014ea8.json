{"ast":null,"code":"import _slicedToArray from\"/Users/shoumikh/Documents/React-projects/imessage-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Avatar,IconButton}from\"@material-ui/core\";import SearchIcon from\"@material-ui/icons/Search\";import React,{useEffect,useState}from\"react\";import\"./Sidebar.css\";import RateReviewOutlinedIcon from\"@material-ui/icons/RateReviewOutlined\";import SidebarChat from\"./SidebarChat\";import db,{auth}from\"./firebase\";import{useDispatch,useSelector}from\"react-redux\";import{selectUser}from\"./features/userSlice\";import{selectChatId,selectChatName,setChat}from\"./features/chatSlice\";function Sidebar(){var _chats$data;var _useState=useState(),_useState2=_slicedToArray(_useState,2),searchInput=_useState2[0],setSearchInput=_useState2[1];var user=useSelector(selectUser);//importing the state\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),chats=_useState4[0],setChats=_useState4[1];//a local state array for collecting chats\nvar dispatch=useDispatch();//as soon as the sidebar component loads\n//creating a db of collection\n//onSnapshot => realtime listener which gives us the\n//snapshot of the database whenever anything changes\n//whenever anything in the database changes as it is continiously listening\n//we are changing setChat state\nuseEffect(function(){db.collection(\"chats\").onSnapshot(function(snapshot){setChats(snapshot.docs.map(function(doc){return{id:doc.id,data:doc.data()};}));});//search functinality\n},[]);//hadles signout\nvar handleClick=function handleClick(){auth.signOut();//handles sign out\n};//adds chat name to the database and redux store\nvar addChat=function addChat(){var chatName=prompt(\"Please Enter chat name\");if(chatName){db.collection(\"chats\").add({chatName:chatName});}};return/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar__header\"},/*#__PURE__*/React.createElement(Avatar,{onClick:handleClick,src:user.photo,className:\"sidebar__avatar\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar__input\"},/*#__PURE__*/React.createElement(SearchIcon,null),/*#__PURE__*/React.createElement(\"input\",{placeholder:\"search\",type:\"text\",onChange:function onChange(e){setSearchInput(e.target.value);}})),/*#__PURE__*/React.createElement(IconButton,{varrient:\"outlined\",className:\"sidebar__inputButton\"},/*#__PURE__*/React.createElement(RateReviewOutlinedIcon,{onClick:addChat}))),/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar__chats\"},searchInput===(chats===null||chats===void 0?void 0:(_chats$data=chats.data)===null||_chats$data===void 0?void 0:_chats$data.chatName)?chats.map(function(_ref){var id=_ref.id,chatName=_ref.data.chatName;return/*#__PURE__*/React.createElement(SidebarChat,{key:id,id:id,chatName:chatName});}):chats.map(function(_ref2){var id=_ref2.id,chatName=_ref2.data.chatName;return/*#__PURE__*/React.createElement(SidebarChat,{key:id,id:id,chatName:chatName});})));}export default Sidebar;","map":{"version":3,"sources":["/Users/shoumikh/Documents/React-projects/imessage-clone/src/Sidebar.js"],"names":["Avatar","IconButton","SearchIcon","React","useEffect","useState","RateReviewOutlinedIcon","SidebarChat","db","auth","useDispatch","useSelector","selectUser","selectChatId","selectChatName","setChat","Sidebar","searchInput","setSearchInput","user","chats","setChats","dispatch","collection","onSnapshot","snapshot","docs","map","doc","id","data","handleClick","signOut","addChat","chatName","prompt","add","photo","e","target","value"],"mappings":"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","sourcesContent":["import { Avatar, IconButton } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Sidebar.css\";\nimport RateReviewOutlinedIcon from \"@material-ui/icons/RateReviewOutlined\";\nimport SidebarChat from \"./SidebarChat\";\nimport db, { auth } from \"./firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport { selectChatId, selectChatName, setChat } from \"./features/chatSlice\";\n\nfunction Sidebar() {\n  const [searchInput, setSearchInput] = useState();\n  const user = useSelector(selectUser); //importing the state\n  const [chats, setChats] = useState([]); //a local state array for collecting chats\n  const dispatch = useDispatch();\n\n  //as soon as the sidebar component loads\n  //creating a db of collection\n  //onSnapshot => realtime listener which gives us the\n  //snapshot of the database whenever anything changes\n  //whenever anything in the database changes as it is continiously listening\n  //we are changing setChat state\n  useEffect(() => {\n    db.collection(\"chats\").onSnapshot((snapshot) => {\n      setChats(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      );\n    });\n\n    //search functinality\n  }, []);\n\n  //hadles signout\n  const handleClick = () => {\n    auth.signOut(); //handles sign out\n  };\n\n  //adds chat name to the database and redux store\n  const addChat = () => {\n    const chatName = prompt(\"Please Enter chat name\");\n    if (chatName) {\n      db.collection(\"chats\").add({\n        chatName: chatName,\n      });\n    }\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <Avatar\n          onClick={handleClick}\n          src={user.photo}\n          className=\"sidebar__avatar\"\n        />\n\n        <div className=\"sidebar__input\">\n          <SearchIcon />\n          <input\n            placeholder=\"search\"\n            type=\"text\"\n            onChange={(e) => {\n              setSearchInput(e.target.value);\n            }}\n          />\n        </div>\n        <IconButton varrient=\"outlined\" className=\"sidebar__inputButton\">\n          <RateReviewOutlinedIcon onClick={addChat} />\n        </IconButton>\n      </div>\n      <div className=\"sidebar__chats\">\n        {/* for everty single chat in the chats array \n          one StatebarChat componenthas been called */}\n        {searchInput === chats?.data?.chatName\n          ? chats.map(({ id, data: { chatName } }) => (\n              <SidebarChat key={id} id={id} chatName={chatName} />\n            ))\n          : chats.map(({ id, data: { chatName } }) => (\n              <SidebarChat key={id} id={id} chatName={chatName} />\n            ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}