{"ast":null,"code":"var _jsxFileName = \"/Users/shoumikh/Documents/React-projects/imessage-clone/src/Sidebar.js\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Sidebar.css\";\nimport RateReviewOutlinedIcon from \"@material-ui/icons/RateReviewOutlined\";\nimport SidebarChat from \"./SidebarChat\";\nimport db, { auth } from \"./firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport { selectChatId, selectChatName, setChat } from \"./features/chatSlice\";\n\nfunction Sidebar() {\n  const user = useSelector(selectUser); //importing the state\n\n  const [chats, setChats] = useState([]); //a local state array for collecting chats\n\n  const dispatch = useDispatch(); //as soon as the sidebar component loads\n  //creating a db of collection\n  //onSnapshot => realtime listener which gives us the\n  //snapshot of the database whenever anything changes\n  //whenever anything in the database changes as it is continiously listening\n  //we are changing setChat state\n\n  useEffect(() => {\n    db.collection(\"chats\").onSnapshot(snapshot => {\n      setChats(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })));\n    });\n  }, []); //hadles signout\n\n  const handleClick = () => {\n    auth.signOut(); //handles sign out\n  }; //adds chat name to the database and redux store\n\n\n  const addChat = () => {\n    const chatName = prompt(\"Please Enter chat name\");\n\n    if (chatName) {\n      db.collection(\"chats\").add({\n        chatName: chatName\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    onClick: handleClick,\n    src: user.photo,\n    className: \"sidebar__avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"search\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    varrient: \"outlined\",\n    className: \"sidebar__inputButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RateReviewOutlinedIcon, {\n    onClick: addChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar__chats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, chats.map(({\n    id,\n    data: {\n      chatName\n    }\n  }) => /*#__PURE__*/React.createElement(SidebarChat, {\n    key: id,\n    id: id,\n    chatName: chatName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Sidebar;","map":{"version":3,"sources":["/Users/shoumikh/Documents/React-projects/imessage-clone/src/Sidebar.js"],"names":["Avatar","IconButton","SearchIcon","React","useEffect","useState","RateReviewOutlinedIcon","SidebarChat","db","auth","useDispatch","useSelector","selectUser","selectChatId","selectChatName","setChat","Sidebar","user","chats","setChats","dispatch","collection","onSnapshot","snapshot","docs","map","doc","id","data","handleClick","signOut","addChat","chatName","prompt","add","photo"],"mappings":"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","sourcesContent":["import { Avatar, IconButton } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Sidebar.css\";\nimport RateReviewOutlinedIcon from \"@material-ui/icons/RateReviewOutlined\";\nimport SidebarChat from \"./SidebarChat\";\nimport db, { auth } from \"./firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport { selectChatId, selectChatName, setChat } from \"./features/chatSlice\";\n\nfunction Sidebar() {\n  const user = useSelector(selectUser); //importing the state\n  const [chats, setChats] = useState([]); //a local state array for collecting chats\n  const dispatch = useDispatch(); \n\n  //as soon as the sidebar component loads\n  //creating a db of collection\n  //onSnapshot => realtime listener which gives us the\n  //snapshot of the database whenever anything changes\n  //whenever anything in the database changes as it is continiously listening\n  //we are changing setChat state\n  useEffect(() => {\n    db.collection(\"chats\").onSnapshot((snapshot) => {\n      setChats(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      );\n    });\n  }, []);\n\n  //hadles signout\n  const handleClick = () => {\n    auth.signOut(); //handles sign out\n  };\n\n  //adds chat name to the database and redux store\n  const addChat = () => {\n    const chatName = prompt(\"Please Enter chat name\");\n    if (chatName) {\n      db.collection(\"chats\").add({\n        chatName: chatName,\n      });\n    }\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <Avatar\n          onClick={handleClick}\n          src={user.photo}\n          className=\"sidebar__avatar\"\n        />\n\n        <div className=\"sidebar__input\">\n          <SearchIcon />\n          <input placeholder=\"search\" type=\"text\" />\n        </div>\n        <IconButton varrient=\"outlined\" className=\"sidebar__inputButton\">\n          <RateReviewOutlinedIcon onClick={addChat} />\n        </IconButton>\n      </div>\n      <div className=\"sidebar__chats\">\n        {/* for everty single chat in the chats array \n          one StatebarChat componenthas been called */}\n        {chats.map(({ id, data: { chatName } }) => (\n          <SidebarChat key={id} id={id} chatName={chatName} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}