{"ast":null,"code":"var _jsxFileName = \"/Users/shoumikh/Documents/React-projects/imessage-clone/src/Sidebar.js\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Sidebar.css\";\nimport RateReviewOutlinedIcon from \"@material-ui/icons/RateReviewOutlined\";\nimport SidebarChat from \"./SidebarChat\";\nimport db, { auth } from \"./firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport { selectChatId, selectChatName, setChat } from \"./features/chatSlice\";\nimport Search from \"./Search\";\nimport { selectSearchInput } from \"./features/searchSlice\";\n\nfunction Sidebar() {\n  const user = useSelector(selectUser); //importing the state\n\n  const [chats, setChats] = useState([]); //a local state array for collecting chats\n\n  const dispatch = useDispatch();\n  const searchInput = useSelector(selectSearchInput); //as soon as the sidebar component loads\n  //creating a db of collection\n  //onSnapshot => realtime listener which gives us the\n  //snapshot of the database whenever anything changes\n  //whenever anything in the database changes as it is continiously listening\n  //we are changing setChat state\n\n  useEffect(() => {\n    db.collection(\"chats\").onSnapshot(snapshot => {\n      setChats(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })));\n    }); //search functinality\n  }, []); //hadles signout\n\n  const handleClick = () => {\n    auth.signOut(); //handles sign out\n  };\n\n  {\n    var _chats$data;\n\n    console.log(chats === null || chats === void 0 ? void 0 : (_chats$data = chats.data) === null || _chats$data === void 0 ? void 0 : _chats$data.chatName);\n  } //adds chat name to the database and redux store\n\n  const addChat = () => {\n    const chatName = prompt(\"Please Enter chat name\");\n\n    if (chatName) {\n      db.collection(\"chats\").add({\n        chatName: chatName\n      });\n    }\n  };\n\n  if ((searchInput === null || searchInput === void 0 ? void 0 : searchInput.length) > 0) {\n    {\n      var _chats$data2;\n\n      console.log(chats === null || chats === void 0 ? void 0 : (_chats$data2 = chats.data) === null || _chats$data2 === void 0 ? void 0 : _chats$data2.chatName);\n    }\n    setChats(chats === null || chats === void 0 ? void 0 : chats.filter(i => {\n      var _i$data, _i$data$chatName;\n\n      return i === null || i === void 0 ? void 0 : (_i$data = i.data) === null || _i$data === void 0 ? void 0 : (_i$data$chatName = _i$data.chatName) === null || _i$data$chatName === void 0 ? void 0 : _i$data$chatName.match(searchInput);\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    onClick: handleClick,\n    src: user.photo,\n    className: \"sidebar__avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    varrient: \"outlined\",\n    className: \"sidebar__inputButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RateReviewOutlinedIcon, {\n    onClick: addChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar__chats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, chats === null || chats === void 0 ? void 0 : chats.map(({\n    id,\n    data: {\n      chatName\n    }\n  }) => /*#__PURE__*/React.createElement(SidebarChat, {\n    key: id,\n    id: id,\n    chatName: chatName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })), console.log(chats)));\n}\n\nexport default Sidebar;","map":{"version":3,"sources":["/Users/shoumikh/Documents/React-projects/imessage-clone/src/Sidebar.js"],"names":["Avatar","IconButton","React","useEffect","useState","RateReviewOutlinedIcon","SidebarChat","db","auth","useDispatch","useSelector","selectUser","selectChatId","selectChatName","setChat","Search","selectSearchInput","Sidebar","user","chats","setChats","dispatch","searchInput","collection","onSnapshot","snapshot","docs","map","doc","id","data","handleClick","signOut","console","log","chatName","addChat","prompt","add","length","filter","i","match","photo"],"mappings":"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","sourcesContent":["import { Avatar, IconButton } from \"@material-ui/core\";\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Sidebar.css\";\nimport RateReviewOutlinedIcon from \"@material-ui/icons/RateReviewOutlined\";\nimport SidebarChat from \"./SidebarChat\";\nimport db, { auth } from \"./firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport { selectChatId, selectChatName, setChat } from \"./features/chatSlice\";\nimport Search from \"./Search\";\nimport { selectSearchInput } from \"./features/searchSlice\";\n\nfunction Sidebar() {\n  const user = useSelector(selectUser); //importing the state\n  const [chats, setChats] = useState([]); //a local state array for collecting chats\n  const dispatch = useDispatch();\n  const searchInput = useSelector(selectSearchInput);\n\n  //as soon as the sidebar component loads\n  //creating a db of collection\n  //onSnapshot => realtime listener which gives us the\n  //snapshot of the database whenever anything changes\n  //whenever anything in the database changes as it is continiously listening\n  //we are changing setChat state\n  useEffect(() => {\n    db.collection(\"chats\").onSnapshot((snapshot) => {\n      setChats(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      );\n    });\n\n    //search functinality\n  }, []);\n\n  //hadles signout\n  const handleClick = () => {\n    auth.signOut(); //handles sign out\n  };\n  {console.log(chats?.data?.chatName)}\n  //adds chat name to the database and redux store\n  const addChat = () => {\n    const chatName = prompt(\"Please Enter chat name\");\n    if (chatName) {\n      db.collection(\"chats\").add({\n        chatName: chatName,\n      });\n    }\n  };\n\n  if (searchInput?.length > 0) {\n    {\n      console.log(chats?.data?.chatName);\n    }\n    setChats(\n      chats?.filter((i) => {\n        return i?.data?.chatName?.match(searchInput);\n      })\n    );\n  }\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <Avatar\n          onClick={handleClick}\n          src={user.photo}\n          className=\"sidebar__avatar\"\n        />\n\n        <div className=\"sidebar__input\">\n          <Search />\n        </div>\n        <IconButton varrient=\"outlined\" className=\"sidebar__inputButton\">\n          <RateReviewOutlinedIcon onClick={addChat} />\n        </IconButton>\n      </div>\n      <div className=\"sidebar__chats\">\n        {/* for everty single chat in the chats array \n          one StatebarChat componenthas been called */}\n        {chats?.map(({ id, data: { chatName } }) => (\n          <SidebarChat key={id} id={id} chatName={chatName} />\n        ))}\n        {console.log(chats)}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}